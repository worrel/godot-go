package class

//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"
import (
	"reflect"
	"unsafe"
)

// godotToGoConverter is a function that will convert a Godot object into
// a Go object.
type godotToGoConverter func(gdObject unsafe.Pointer) reflect.Value

// godotToGoConversionMap is an internal mapping of Godot types to functions that can
// convert to Go types. This mapping is essentially a more optimal case/switch
// system for converting Godot types to Go types.
var godotToGoConversionMap = map[string]godotToGoConverter{
	"bool": func(gdObject unsafe.Pointer) reflect.Value {
		converted := (*C.godot_bool)(gdObject)
		return reflect.ValueOf(godotBoolAsBool(*converted))
	},
	"int64": func(gdObject unsafe.Pointer) reflect.Value {
		converted := (*C.godot_int)(gdObject)
		return reflect.ValueOf(godotIntAsInt(*converted))
	},
	"uint64": func(gdObject unsafe.Pointer) reflect.Value {
		converted := (*C.uint64_t)(gdObject)
		return reflect.ValueOf(uint64(*converted))
	},
	"float64": func(gdObject unsafe.Pointer) reflect.Value {
		converted := (*C.godot_real)(gdObject)
		return reflect.ValueOf(float64(*converted))
	},
	"string": func(gdObject unsafe.Pointer) reflect.Value {
		converted := (*C.godot_string)(gdObject)
		return reflect.ValueOf(godotStringAsString(converted))
	},
	"*Array": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Array{}
		converted.array = (*C.godot_array)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Basis": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Basis{}
		converted.basis = (*C.godot_basis)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Color": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Color{}
		converted.color = (*C.godot_color)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Dictionary": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Dictionary{}
		converted.dictionary = (*C.godot_dictionary)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*NodePath": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &NodePath{}
		converted.nodePath = (*C.godot_node_path)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Plane": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Plane{}
		converted.plane = (*C.godot_plane)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Quat": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Quat{}
		converted.quat = (*C.godot_quat)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Rect2": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Rect2{}
		converted.rect2 = (*C.godot_rect2)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Rect3": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Rect3{}
		converted.rect3 = (*C.godot_rect3)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*RID": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &RID{}
		converted.rid = (*C.godot_rid)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Transform": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Transform{}
		converted.transform = (*C.godot_transform)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Transform2D": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Transform2D{}
		converted.transform2d = (*C.godot_transform2d)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Variant": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Variant{}
		converted.variant = (*C.godot_variant)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Vector2": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Vector2{}
		converted.vector2 = (*C.godot_vector2)(gdObject)
		return reflect.ValueOf(converted)
	},
	"*Vector3": func(gdObject unsafe.Pointer) reflect.Value {
		converted := &Vector3{}
		converted.vector3 = (*C.godot_vector3)(gdObject)
		return reflect.ValueOf(converted)
	},

	"*ARVRAnchor": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVRAnchor{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ARVRCamera": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVRCamera{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ARVRController": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVRController{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ARVRInterface": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVRInterface{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ARVROrigin": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVROrigin{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ARVRPositionalTracker": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVRPositionalTracker{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ARVRScriptInterface": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ARVRScriptInterface{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*arvrServer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &arvrServer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AStar": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AStar{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AcceptDialog": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AcceptDialog{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AnimatedSprite": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AnimatedSprite{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AnimatedSprite3D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AnimatedSprite3D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Animation": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Animation{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AnimationPlayer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AnimationPlayer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AnimationTreePlayer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AnimationTreePlayer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Area": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Area{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Area2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Area2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ArrayMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ArrayMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AtlasTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AtlasTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioBusLayout": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioBusLayout{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffect": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffect{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectAmplify": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectAmplify{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectBandLimitFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectBandLimitFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectBandPassFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectBandPassFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectChorus": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectChorus{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectCompressor": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectCompressor{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectDelay": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectDelay{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectDistortion": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectDistortion{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectEQ": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectEQ{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectEQ10": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectEQ10{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectEQ21": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectEQ21{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectEQ6": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectEQ6{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectHighPassFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectHighPassFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectHighShelfFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectHighShelfFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectLimiter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectLimiter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectLowPassFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectLowPassFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectLowShelfFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectLowShelfFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectNotchFilter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectNotchFilter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectPanner": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectPanner{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectPhaser": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectPhaser{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectPitchShift": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectPitchShift{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectReverb": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectReverb{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioEffectStereoEnhance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioEffectStereoEnhance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*audioServer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &audioServer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStream": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStream{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamOGGVorbis": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamOGGVorbis{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamPlayback": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamPlayback{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamPlayer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamPlayer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamPlayer2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamPlayer2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamPlayer3D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamPlayer3D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamRandomPitch": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamRandomPitch{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*AudioStreamSample": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &AudioStreamSample{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BackBufferCopy": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BackBufferCopy{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BaseButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BaseButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BitMap": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BitMap{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BitmapFont": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BitmapFont{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BoneAttachment": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BoneAttachment{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BoxContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BoxContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*BoxShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &BoxShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Button": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Button{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ButtonGroup": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ButtonGroup{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Camera": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Camera{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Camera2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Camera2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CanvasItem": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CanvasItem{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CanvasItemMaterial": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CanvasItemMaterial{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CanvasLayer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CanvasLayer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CanvasModulate": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CanvasModulate{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CapsuleMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CapsuleMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CapsuleShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CapsuleShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CapsuleShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CapsuleShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CenterContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CenterContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CheckBox": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CheckBox{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CheckButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CheckButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CircleShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CircleShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CollisionObject": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CollisionObject{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CollisionObject2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CollisionObject2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CollisionPolygon": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CollisionPolygon{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CollisionPolygon2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CollisionPolygon2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CollisionShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CollisionShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CollisionShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CollisionShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ColorPicker": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ColorPicker{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ColorPickerButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ColorPickerButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ColorRect": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ColorRect{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConcavePolygonShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConcavePolygonShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConcavePolygonShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConcavePolygonShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConeTwistJoint": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConeTwistJoint{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConfigFile": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConfigFile{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConfirmationDialog": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConfirmationDialog{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Container": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Container{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Control": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Control{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConvexPolygonShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConvexPolygonShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ConvexPolygonShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ConvexPolygonShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CubeMap": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CubeMap{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CubeMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CubeMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Curve": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Curve{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Curve2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Curve2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Curve3D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Curve3D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CurveTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CurveTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*CylinderMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &CylinderMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*DampedSpringJoint2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &DampedSpringJoint2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*DirectionalLight": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &DirectionalLight{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*DynamicFont": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &DynamicFont{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*DynamicFontData": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &DynamicFontData{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorExportPlugin": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorExportPlugin{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorFileDialog": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorFileDialog{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorFileSystem": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorFileSystem{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorFileSystemDirectory": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorFileSystemDirectory{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorImportPlugin": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorImportPlugin{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorInterface": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorInterface{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorPlugin": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorPlugin{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorResourceConversionPlugin": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorResourceConversionPlugin{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorResourcePreview": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorResourcePreview{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorResourcePreviewGenerator": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorResourcePreviewGenerator{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorScript": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorScript{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorSelection": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorSelection{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorSettings": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorSettings{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EditorSpatialGizmo": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EditorSpatialGizmo{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*EncodedObjectAsID": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &EncodedObjectAsID{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Environment": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Environment{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*FileDialog": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &FileDialog{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Font": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Font{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*FuncRef": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &FuncRef{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GDFunctionState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GDFunctionState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GDNative": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GDNative{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GDNativeLibrary": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GDNativeLibrary{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GDScript": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GDScript{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GIProbe": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GIProbe{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GIProbeData": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GIProbeData{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Generic6DOFJoint": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Generic6DOFJoint{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GeometryInstance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GeometryInstance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Gradient": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Gradient{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GradientTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GradientTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GraphEdit": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GraphEdit{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GraphNode": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GraphNode{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GridContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GridContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GridMap": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GridMap{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*GrooveJoint2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &GrooveJoint2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HBoxContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HBoxContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HScrollBar": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HScrollBar{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HSeparator": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HSeparator{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HSlider": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HSlider{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HSplitContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HSplitContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HTTPClient": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HTTPClient{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HTTPRequest": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HTTPRequest{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*HingeJoint": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &HingeJoint{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ip": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ip{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*IP_Unix": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &IP_Unix{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Image": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Image{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ImageTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ImageTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ImmediateGeometry": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ImmediateGeometry{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*input": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &input{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputDefault": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputDefault{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEvent": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEvent{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventAction": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventAction{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventJoypadButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventJoypadButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventJoypadMotion": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventJoypadMotion{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventKey": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventKey{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventMouse": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventMouse{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventMouseButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventMouseButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventMouseMotion": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventMouseMotion{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventScreenDrag": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventScreenDrag{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventScreenTouch": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventScreenTouch{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InputEventWithModifiers": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InputEventWithModifiers{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*inputMap": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &inputMap{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InstancePlaceholder": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InstancePlaceholder{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*InterpolatedCamera": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &InterpolatedCamera{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ItemList": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ItemList{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*JSONParseResult": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &JSONParseResult{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Joint": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Joint{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Joint2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Joint2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*KinematicBody": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &KinematicBody{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*KinematicBody2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &KinematicBody2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*KinematicCollision": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &KinematicCollision{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*KinematicCollision2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &KinematicCollision2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Label": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Label{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*LargeTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &LargeTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Light": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Light{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Light2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Light2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*LightOccluder2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &LightOccluder2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Line2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Line2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*LineEdit": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &LineEdit{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*LineShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &LineShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*LinkButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &LinkButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Listener": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Listener{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MainLoop": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MainLoop{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MarginContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MarginContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Material": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Material{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MenuButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MenuButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Mesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Mesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MeshDataTool": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MeshDataTool{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MeshInstance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MeshInstance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MeshLibrary": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MeshLibrary{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MultiMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MultiMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*MultiMeshInstance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &MultiMeshInstance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NativeScript": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NativeScript{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Navigation": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Navigation{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Navigation2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Navigation2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NavigationMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NavigationMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NavigationMeshInstance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NavigationMeshInstance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NavigationPolygon": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NavigationPolygon{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NavigationPolygonInstance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NavigationPolygonInstance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NetworkedMultiplayerENet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NetworkedMultiplayerENet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NetworkedMultiplayerPeer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NetworkedMultiplayerPeer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*NinePatchRect": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &NinePatchRect{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Node": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Node{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Node2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Node2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Object": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Object{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*OccluderPolygon2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &OccluderPolygon2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*OmniLight": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &OmniLight{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*OptionButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &OptionButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PCKPacker": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PCKPacker{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PHashTranslation": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PHashTranslation{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PackedDataContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PackedDataContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PackedDataContainerRef": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PackedDataContainerRef{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PackedScene": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PackedScene{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PacketPeer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PacketPeer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PacketPeerStream": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PacketPeerStream{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PacketPeerUDP": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PacketPeerUDP{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Panel": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Panel{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PanelContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PanelContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PanoramaSky": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PanoramaSky{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ParallaxBackground": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ParallaxBackground{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ParallaxLayer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ParallaxLayer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Particles": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Particles{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Particles2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Particles2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ParticlesMaterial": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ParticlesMaterial{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Path": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Path{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Path2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Path2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PathFollow": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PathFollow{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PathFollow2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PathFollow2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*performance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &performance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DDirectBodyState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DDirectBodyState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DDirectBodyStateSW": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DDirectBodyStateSW{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DDirectSpaceState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DDirectSpaceState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*physics2DServer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &physics2DServer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DServerSW": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DServerSW{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DShapeQueryParameters": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DShapeQueryParameters{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DShapeQueryResult": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DShapeQueryResult{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Physics2DTestMotionResult": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Physics2DTestMotionResult{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsBody": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsBody{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsBody2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsBody2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsDirectBodyState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsDirectBodyState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsDirectBodyStateSW": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsDirectBodyStateSW{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsDirectSpaceState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsDirectSpaceState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*physicsServer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &physicsServer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsServerSW": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsServerSW{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsShapeQueryParameters": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsShapeQueryParameters{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PhysicsShapeQueryResult": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PhysicsShapeQueryResult{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PinJoint": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PinJoint{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PinJoint2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PinJoint2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PlaneMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PlaneMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PlaneShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PlaneShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Polygon2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Polygon2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PolygonPathFinder": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PolygonPathFinder{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Popup": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Popup{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PopupDialog": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PopupDialog{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PopupMenu": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PopupMenu{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PopupPanel": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PopupPanel{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Position2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Position2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Position3D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Position3D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PrimitiveMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PrimitiveMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*PrismMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &PrismMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ProceduralSky": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ProceduralSky{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ProgressBar": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ProgressBar{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*projectSettings": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &projectSettings{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ProximityGroup": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ProximityGroup{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*QuadMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &QuadMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Range": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Range{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RayCast": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RayCast{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RayCast2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RayCast2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RayShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RayShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RayShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RayShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RectangleShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RectangleShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Reference": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Reference{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ReferenceRect": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ReferenceRect{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ReflectionProbe": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ReflectionProbe{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RegEx": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RegEx{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RegExMatch": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RegExMatch{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RemoteTransform": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RemoteTransform{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RemoteTransform2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RemoteTransform2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Resource": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Resource{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ResourceImporter": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ResourceImporter{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ResourceImporterOGGVorbis": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ResourceImporterOGGVorbis{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ResourceInteractiveLoader": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ResourceInteractiveLoader{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ResourcePreloader": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ResourcePreloader{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RichTextLabel": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RichTextLabel{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RigidBody": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RigidBody{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*RigidBody2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &RigidBody2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SceneState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SceneState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SceneTree": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SceneTree{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SceneTreeTimer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SceneTreeTimer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Script": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Script{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ScriptEditor": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ScriptEditor{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ScrollBar": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ScrollBar{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ScrollContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ScrollContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SegmentShape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SegmentShape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Separator": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Separator{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Shader": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Shader{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ShaderMaterial": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ShaderMaterial{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Shape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Shape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Shape2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Shape2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ShortCut": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ShortCut{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Skeleton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Skeleton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Sky": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Sky{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Slider": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Slider{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SliderJoint": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SliderJoint{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Spatial": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Spatial{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpatialGizmo": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpatialGizmo{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpatialMaterial": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpatialMaterial{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpatialVelocityTracker": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpatialVelocityTracker{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SphereMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SphereMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SphereShape": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SphereShape{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpinBox": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpinBox{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SplitContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SplitContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpotLight": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpotLight{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Sprite": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Sprite{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Sprite3D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Sprite3D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpriteBase3D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpriteBase3D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SpriteFrames": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SpriteFrames{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StaticBody": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StaticBody{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StaticBody2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StaticBody2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StreamPeer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StreamPeer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StreamPeerBuffer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StreamPeerBuffer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StreamPeerSSL": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StreamPeerSSL{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StreamPeerTCP": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StreamPeerTCP{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StreamTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StreamTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StyleBox": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StyleBox{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StyleBoxEmpty": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StyleBoxEmpty{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StyleBoxFlat": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StyleBoxFlat{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*StyleBoxTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &StyleBoxTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*SurfaceTool": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &SurfaceTool{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TCP_Server": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TCP_Server{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TabContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TabContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Tabs": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Tabs{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TextEdit": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TextEdit{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Texture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Texture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TextureButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TextureButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TextureProgress": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TextureProgress{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TextureRect": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TextureRect{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Theme": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Theme{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TileMap": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TileMap{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TileSet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TileSet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Timer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Timer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ToolButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ToolButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TouchScreenButton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TouchScreenButton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Translation": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Translation{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*translationServer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &translationServer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Tree": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Tree{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TreeItem": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TreeItem{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*TriangleMesh": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &TriangleMesh{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Tween": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Tween{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*UndoRedo": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &UndoRedo{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VBoxContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VBoxContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VScrollBar": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VScrollBar{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VSeparator": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VSeparator{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VSlider": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VSlider{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VSplitContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VSplitContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VehicleBody": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VehicleBody{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VehicleWheel": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VehicleWheel{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VideoPlayer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VideoPlayer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VideoStream": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VideoStream{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*Viewport": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &Viewport{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ViewportContainer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ViewportContainer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*ViewportTexture": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &ViewportTexture{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisibilityEnabler": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisibilityEnabler{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisibilityEnabler2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisibilityEnabler2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisibilityNotifier": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisibilityNotifier{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisibilityNotifier2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisibilityNotifier2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualInstance": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualInstance{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScript": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScript{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptBasicTypeConstant": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptBasicTypeConstant{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptBuiltinFunc": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptBuiltinFunc{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptClassConstant": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptClassConstant{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptComment": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptComment{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptCondition": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptCondition{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptConstant": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptConstant{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptConstructor": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptConstructor{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptCustomNode": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptCustomNode{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptDeconstruct": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptDeconstruct{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptEmitSignal": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptEmitSignal{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptEngineSingleton": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptEngineSingleton{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptExpression": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptExpression{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptFunction": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptFunction{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptFunctionCall": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptFunctionCall{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptFunctionState": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptFunctionState{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptGlobalConstant": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptGlobalConstant{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptIndexGet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptIndexGet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptIndexSet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptIndexSet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptInputAction": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptInputAction{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptIterator": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptIterator{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptLocalVar": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptLocalVar{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptLocalVarSet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptLocalVarSet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptMathConstant": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptMathConstant{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptNode": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptNode{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptOperator": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptOperator{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptPreload": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptPreload{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptPropertyGet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptPropertyGet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptPropertySet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptPropertySet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptResourcePath": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptResourcePath{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptReturn": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptReturn{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSceneNode": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSceneNode{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSceneTree": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSceneTree{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSelect": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSelect{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSelf": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSelf{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSequence": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSequence{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSubCall": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSubCall{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptSwitch": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptSwitch{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptTypeCast": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptTypeCast{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptVariableGet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptVariableGet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptVariableSet": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptVariableSet{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptWhile": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptWhile{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptYield": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptYield{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*VisualScriptYieldSignal": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &VisualScriptYieldSignal{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*visualServer": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &visualServer{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*WeakRef": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &WeakRef{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*WindowDialog": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &WindowDialog{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*World": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &World{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*World2D": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &World2D{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*WorldEnvironment": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &WorldEnvironment{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*XMLParser": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &XMLParser{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},

	"*YSort": func(gdObject unsafe.Pointer) reflect.Value {
		owner := (*C.godot_object)(gdObject)
		goObject := &YSort{}
		goObject.setOwner(owner)

		return reflect.ValueOf(goObject)
	},
}
