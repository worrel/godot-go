//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package physicsshapequeryparameters

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/reference"
)

/*

 */
type PhysicsShapeQueryParameters struct {
	reference.Reference
}

func (o *PhysicsShapeQueryParameters) baseClass() string {
	return "PhysicsShapeQueryParameters"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *PhysicsShapeQueryParameters) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *PhysicsShapeQueryParameters) getOwner() *C.godot_object {
	return o.owner
}

/*

 */
func (o *PhysicsShapeQueryParameters) GetCollisionLayer() int64 {
	log.Println("Calling PhysicsShapeQueryParameters.GetCollisionLayer()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_collision_layer", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsShapeQueryParameters) GetExclude() *Array {
	log.Println("Calling PhysicsShapeQueryParameters.GetExclude()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_exclude", goArguments, "*Array")

	returnValue := goRet.Interface().(*Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsShapeQueryParameters) GetMargin() float64 {
	log.Println("Calling PhysicsShapeQueryParameters.GetMargin()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_margin", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsShapeQueryParameters) GetObjectTypeMask() int64 {
	log.Println("Calling PhysicsShapeQueryParameters.GetObjectTypeMask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_object_type_mask", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsShapeQueryParameters) GetShapeRid() *RID {
	log.Println("Calling PhysicsShapeQueryParameters.GetShapeRid()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_shape_rid", goArguments, "*RID")

	returnValue := goRet.Interface().(*RID)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsShapeQueryParameters) GetTransform() *Transform {
	log.Println("Calling PhysicsShapeQueryParameters.GetTransform()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_transform", goArguments, "*Transform")

	returnValue := goRet.Interface().(*Transform)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetCollisionLayer(collisionLayer int64) {
	log.Println("Calling PhysicsShapeQueryParameters.SetCollisionLayer()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(collisionLayer)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_collision_layer", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetExclude(exclude *Array) {
	log.Println("Calling PhysicsShapeQueryParameters.SetExclude()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(exclude)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_exclude", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetMargin(margin float64) {
	log.Println("Calling PhysicsShapeQueryParameters.SetMargin()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(margin)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_margin", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetObjectTypeMask(objectTypeMask int64) {
	log.Println("Calling PhysicsShapeQueryParameters.SetObjectTypeMask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(objectTypeMask)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_object_type_mask", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetShape(shape *Resource) {
	log.Println("Calling PhysicsShapeQueryParameters.SetShape()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(shape)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_shape", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetShapeRid(shape *RID) {
	log.Println("Calling PhysicsShapeQueryParameters.SetShapeRid()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(shape)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_shape_rid", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *PhysicsShapeQueryParameters) SetTransform(transform *Transform) {
	log.Println("Calling PhysicsShapeQueryParameters.SetTransform()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(transform)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_transform", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   PhysicsShapeQueryParametersImplementer is an interface for PhysicsShapeQueryParameters objects.
*/
type PhysicsShapeQueryParametersImplementer interface {
	class.Class
}
