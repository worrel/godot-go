//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package path2d

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/node2d"
)

/*
   This class is a container/Node-ification of a [Curve2D], so it can have [Node2D] properties and [Node] info.
*/
type Path2D struct {
	node2d.Node2D
}

func (o *Path2D) baseClass() string {
	return "Path2D"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *Path2D) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *Path2D) getOwner() *C.godot_object {
	return o.owner
}

/*
   Undocumented
*/
func (o *Path2D) X_CurveChanged() {
	log.Println("Calling Path2D.X_CurveChanged()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "_curve_changed", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Returns the [Curve2D] contained.
*/
func (o *Path2D) GetCurve() *Curve2D {
	log.Println("Calling Path2D.GetCurve()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_curve", goArguments, "*Curve2D")

	returnValue := goRet.Interface().(*Curve2D)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Sets the [Curve2D].
*/
func (o *Path2D) SetCurve(curve *Curve2D) {
	log.Println("Calling Path2D.SetCurve()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(curve)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_curve", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Path2DImplementer is an interface for Path2D objects.
*/
type Path2DImplementer interface {
	class.Class
}
