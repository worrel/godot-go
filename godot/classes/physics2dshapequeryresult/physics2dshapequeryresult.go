//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package physics2dshapequeryresult

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/reference"
)

/*

 */
type Physics2DShapeQueryResult struct {
	reference.Reference
}

func (o *Physics2DShapeQueryResult) baseClass() string {
	return "Physics2DShapeQueryResult"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *Physics2DShapeQueryResult) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *Physics2DShapeQueryResult) getOwner() *C.godot_object {
	return o.owner
}

/*

 */
func (o *Physics2DShapeQueryResult) GetResultCount() int64 {
	log.Println("Calling Physics2DShapeQueryResult.GetResultCount()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_result_count", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *Physics2DShapeQueryResult) GetResultObject(idx int64) *Object {
	log.Println("Calling Physics2DShapeQueryResult.GetResultObject()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(idx)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_result_object", goArguments, "*Object")

	returnValue := goRet.Interface().(*Object)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *Physics2DShapeQueryResult) GetResultObjectId(idx int64) int64 {
	log.Println("Calling Physics2DShapeQueryResult.GetResultObjectId()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(idx)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_result_object_id", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *Physics2DShapeQueryResult) GetResultObjectShape(idx int64) int64 {
	log.Println("Calling Physics2DShapeQueryResult.GetResultObjectShape()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(idx)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_result_object_shape", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *Physics2DShapeQueryResult) GetResultRid(idx int64) *RID {
	log.Println("Calling Physics2DShapeQueryResult.GetResultRid()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(idx)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_result_rid", goArguments, "*RID")

	returnValue := goRet.Interface().(*RID)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Physics2DShapeQueryResultImplementer is an interface for Physics2DShapeQueryResult objects.
*/
type Physics2DShapeQueryResultImplementer interface {
	class.Class
}
