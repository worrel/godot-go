//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package buttongroup

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/resource"
)

/*
   Group of [Button]. All direct and indirect children buttons become radios. Only one allows being pressed.
*/
type ButtonGroup struct {
	resource.Resource
}

func (o *ButtonGroup) baseClass() string {
	return "ButtonGroup"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *ButtonGroup) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *ButtonGroup) getOwner() *C.godot_object {
	return o.owner
}

/*
   Return the pressed button.
*/
func (o *ButtonGroup) GetPressedButton() *BaseButton {
	log.Println("Calling ButtonGroup.GetPressedButton()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_pressed_button", goArguments, "*BaseButton")

	returnValue := goRet.Interface().(*BaseButton)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   ButtonGroupImplementer is an interface for ButtonGroup objects.
*/
type ButtonGroupImplementer interface {
	class.Class
}
