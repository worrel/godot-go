//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package occluderpolygon2d

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/resource"
)

/*

 */
type OccluderPolygon2D struct {
	resource.Resource
}

func (o *OccluderPolygon2D) baseClass() string {
	return "OccluderPolygon2D"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *OccluderPolygon2D) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *OccluderPolygon2D) getOwner() *C.godot_object {
	return o.owner
}

/*

 */
func (o *OccluderPolygon2D) GetCullMode() int64 {
	log.Println("Calling OccluderPolygon2D.GetCullMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_cull_mode", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *OccluderPolygon2D) GetPolygon() *PoolVector2Array {
	log.Println("Calling OccluderPolygon2D.GetPolygon()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_polygon", goArguments, "*PoolVector2Array")

	returnValue := goRet.Interface().(*PoolVector2Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *OccluderPolygon2D) IsClosed() bool {
	log.Println("Calling OccluderPolygon2D.IsClosed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "is_closed", goArguments, "bool")

	returnValue := goRet.Interface().(bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *OccluderPolygon2D) SetClosed(closed bool) {
	log.Println("Calling OccluderPolygon2D.SetClosed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(closed)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_closed", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *OccluderPolygon2D) SetCullMode(cullMode int64) {
	log.Println("Calling OccluderPolygon2D.SetCullMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(cullMode)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_cull_mode", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *OccluderPolygon2D) SetPolygon(polygon *PoolVector2Array) {
	log.Println("Calling OccluderPolygon2D.SetPolygon()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(polygon)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_polygon", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   OccluderPolygon2DImplementer is an interface for OccluderPolygon2D objects.
*/
type OccluderPolygon2DImplementer interface {
	class.Class
}
