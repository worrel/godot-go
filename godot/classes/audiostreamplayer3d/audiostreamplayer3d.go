//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package audiostreamplayer3d

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/spatial"
)

/*
   Plays a sound effect with directed sound effects, dampens with distance if needed, generates effect of hearable position in space.
*/
type AudioStreamPlayer3D struct {
	spatial.Spatial
}

func (o *AudioStreamPlayer3D) baseClass() string {
	return "AudioStreamPlayer3D"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *AudioStreamPlayer3D) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *AudioStreamPlayer3D) getOwner() *C.godot_object {
	return o.owner
}

/*
   Undocumented
*/
func (o *AudioStreamPlayer3D) X_BusLayoutChanged() {
	log.Println("Calling AudioStreamPlayer3D.X_BusLayoutChanged()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "_bus_layout_changed", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioStreamPlayer3D) X_IsActive() bool {
	log.Println("Calling AudioStreamPlayer3D.X_IsActive()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "_is_active", goArguments, "bool")

	returnValue := goRet.Interface().(bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioStreamPlayer3D) X_SetPlaying(enable bool) {
	log.Println("Calling AudioStreamPlayer3D.X_SetPlaying()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enable)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "_set_playing", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) GetAreaMask() int64 {
	log.Println("Calling AudioStreamPlayer3D.GetAreaMask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_area_mask", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetAttenuationFilterCutoffHz() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetAttenuationFilterCutoffHz()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_attenuation_filter_cutoff_hz", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetAttenuationFilterDb() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetAttenuationFilterDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_attenuation_filter_db", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetAttenuationModel() int64 {
	log.Println("Calling AudioStreamPlayer3D.GetAttenuationModel()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_attenuation_model", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetBus() string {
	log.Println("Calling AudioStreamPlayer3D.GetBus()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_bus", goArguments, "string")

	returnValue := goRet.Interface().(string)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetDopplerTracking() int64 {
	log.Println("Calling AudioStreamPlayer3D.GetDopplerTracking()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_doppler_tracking", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetEmissionAngle() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetEmissionAngle()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_emission_angle", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetEmissionAngleFilterAttenuationDb() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetEmissionAngleFilterAttenuationDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_emission_angle_filter_attenuation_db", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetMaxDb() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetMaxDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_max_db", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetMaxDistance() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetMaxDistance()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_max_distance", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetOutOfRangeMode() int64 {
	log.Println("Calling AudioStreamPlayer3D.GetOutOfRangeMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_out_of_range_mode", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Returns the position in the [AudioStream].
*/
func (o *AudioStreamPlayer3D) GetPlaybackPosition() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetPlaybackPosition()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_playback_position", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetStream() *AudioStream {
	log.Println("Calling AudioStreamPlayer3D.GetStream()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_stream", goArguments, "*AudioStream")

	returnValue := goRet.Interface().(*AudioStream)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetUnitDb() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetUnitDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_unit_db", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) GetUnitSize() float64 {
	log.Println("Calling AudioStreamPlayer3D.GetUnitSize()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_unit_size", goArguments, "float64")

	returnValue := goRet.Interface().(float64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) IsAutoplayEnabled() bool {
	log.Println("Calling AudioStreamPlayer3D.IsAutoplayEnabled()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "is_autoplay_enabled", goArguments, "bool")

	returnValue := goRet.Interface().(bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) IsEmissionAngleEnabled() bool {
	log.Println("Calling AudioStreamPlayer3D.IsEmissionAngleEnabled()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "is_emission_angle_enabled", goArguments, "bool")

	returnValue := goRet.Interface().(bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *AudioStreamPlayer3D) IsPlaying() bool {
	log.Println("Calling AudioStreamPlayer3D.IsPlaying()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "is_playing", goArguments, "bool")

	returnValue := goRet.Interface().(bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Plays the audio from the given position 'from_position', in seconds.
*/
func (o *AudioStreamPlayer3D) Play(fromPosition float64) {
	log.Println("Calling AudioStreamPlayer3D.Play()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(fromPosition)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "play", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Sets the position from which audio will be played, in seconds.
*/
func (o *AudioStreamPlayer3D) Seek(toPosition float64) {
	log.Println("Calling AudioStreamPlayer3D.Seek()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(toPosition)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "seek", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetAreaMask(mask int64) {
	log.Println("Calling AudioStreamPlayer3D.SetAreaMask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(mask)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_area_mask", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetAttenuationFilterCutoffHz(degrees float64) {
	log.Println("Calling AudioStreamPlayer3D.SetAttenuationFilterCutoffHz()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(degrees)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_attenuation_filter_cutoff_hz", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetAttenuationFilterDb(db float64) {
	log.Println("Calling AudioStreamPlayer3D.SetAttenuationFilterDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(db)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_attenuation_filter_db", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetAttenuationModel(model int64) {
	log.Println("Calling AudioStreamPlayer3D.SetAttenuationModel()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(model)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_attenuation_model", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetAutoplay(enable bool) {
	log.Println("Calling AudioStreamPlayer3D.SetAutoplay()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enable)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_autoplay", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetBus(bus string) {
	log.Println("Calling AudioStreamPlayer3D.SetBus()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(bus)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_bus", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetDopplerTracking(mode int64) {
	log.Println("Calling AudioStreamPlayer3D.SetDopplerTracking()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(mode)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_doppler_tracking", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetEmissionAngle(degrees float64) {
	log.Println("Calling AudioStreamPlayer3D.SetEmissionAngle()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(degrees)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_emission_angle", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetEmissionAngleEnabled(enabled bool) {
	log.Println("Calling AudioStreamPlayer3D.SetEmissionAngleEnabled()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enabled)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_emission_angle_enabled", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetEmissionAngleFilterAttenuationDb(db float64) {
	log.Println("Calling AudioStreamPlayer3D.SetEmissionAngleFilterAttenuationDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(db)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_emission_angle_filter_attenuation_db", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetMaxDb(maxDb float64) {
	log.Println("Calling AudioStreamPlayer3D.SetMaxDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(maxDb)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_max_db", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetMaxDistance(metres float64) {
	log.Println("Calling AudioStreamPlayer3D.SetMaxDistance()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(metres)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_max_distance", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetOutOfRangeMode(mode int64) {
	log.Println("Calling AudioStreamPlayer3D.SetOutOfRangeMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(mode)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_out_of_range_mode", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetStream(stream *AudioStream) {
	log.Println("Calling AudioStreamPlayer3D.SetStream()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(stream)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_stream", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetUnitDb(unitDb float64) {
	log.Println("Calling AudioStreamPlayer3D.SetUnitDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(unitDb)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_unit_db", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *AudioStreamPlayer3D) SetUnitSize(unitSize float64) {
	log.Println("Calling AudioStreamPlayer3D.SetUnitSize()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(unitSize)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_unit_size", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Stops the audio.
*/
func (o *AudioStreamPlayer3D) Stop() {
	log.Println("Calling AudioStreamPlayer3D.Stop()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "stop", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   AudioStreamPlayer3DImplementer is an interface for AudioStreamPlayer3D objects.
*/
type AudioStreamPlayer3DImplementer interface {
	class.Class
}
