//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package visualscriptcondition

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/visualscriptnode"
)

/*
   A Visual Script node that checks a [bool] input port. If [code]true[/code] it will exit via the “true” sequence port. If [code]false[/code] it will exit via the "false" sequence port. After exiting either, it exits via the “done” port. Sequence ports may be left disconnected. [b]Input Ports:[/b] - Sequence: [code]if (cond) is[/code] - Data (boolean): [code]cond[/code] [b]Output Ports:[/b] - Sequence: [code]true[/code] - Sequence: [code]false[/code] - Sequence: [code]done[/code]
*/
type VisualScriptCondition struct {
	visualscriptnode.VisualScriptNode
}

func (o *VisualScriptCondition) baseClass() string {
	return "VisualScriptCondition"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *VisualScriptCondition) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *VisualScriptCondition) getOwner() *C.godot_object {
	return o.owner
}

/*
   VisualScriptConditionImplementer is an interface for VisualScriptCondition objects.
*/
type VisualScriptConditionImplementer interface {
	class.Class
}
