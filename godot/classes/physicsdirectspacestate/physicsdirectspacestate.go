//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package physicsdirectspacestate

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/object"
)

/*

 */
type PhysicsDirectSpaceState struct {
	object.Object
}

func (o *PhysicsDirectSpaceState) baseClass() string {
	return "PhysicsDirectSpaceState"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *PhysicsDirectSpaceState) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *PhysicsDirectSpaceState) getOwner() *C.godot_object {
	return o.owner
}

/*

 */
func (o *PhysicsDirectSpaceState) CastMotion(shape *PhysicsShapeQueryParameters, motion *Vector3) *Array {
	log.Println("Calling PhysicsDirectSpaceState.CastMotion()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(shape)
	goArguments[1] = reflect.ValueOf(motion)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "cast_motion", goArguments, "*Array")

	returnValue := goRet.Interface().(*Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsDirectSpaceState) CollideShape(shape *PhysicsShapeQueryParameters, maxResults int64) *Array {
	log.Println("Calling PhysicsDirectSpaceState.CollideShape()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(shape)
	goArguments[1] = reflect.ValueOf(maxResults)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "collide_shape", goArguments, "*Array")

	returnValue := goRet.Interface().(*Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsDirectSpaceState) GetRestInfo(shape *PhysicsShapeQueryParameters) *Dictionary {
	log.Println("Calling PhysicsDirectSpaceState.GetRestInfo()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(shape)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_rest_info", goArguments, "*Dictionary")

	returnValue := goRet.Interface().(*Dictionary)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsDirectSpaceState) IntersectRay(from *Vector3, to *Vector3, exclude *Array, collisionLayer int64, typeMask int64) *Dictionary {
	log.Println("Calling PhysicsDirectSpaceState.IntersectRay()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 5, 5)
	goArguments[0] = reflect.ValueOf(from)
	goArguments[1] = reflect.ValueOf(to)
	goArguments[2] = reflect.ValueOf(exclude)
	goArguments[3] = reflect.ValueOf(collisionLayer)
	goArguments[4] = reflect.ValueOf(typeMask)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "intersect_ray", goArguments, "*Dictionary")

	returnValue := goRet.Interface().(*Dictionary)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PhysicsDirectSpaceState) IntersectShape(shape *PhysicsShapeQueryParameters, maxResults int64) *Array {
	log.Println("Calling PhysicsDirectSpaceState.IntersectShape()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(shape)
	goArguments[1] = reflect.ValueOf(maxResults)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "intersect_shape", goArguments, "*Array")

	returnValue := goRet.Interface().(*Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   PhysicsDirectSpaceStateImplementer is an interface for PhysicsDirectSpaceState objects.
*/
type PhysicsDirectSpaceStateImplementer interface {
	class.Class
}
