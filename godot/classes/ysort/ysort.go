//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package ysort

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/node2d"
)

/*
   Sort all child nodes based on their Y positions. The child node must inherit from [CanvasItem] for it to be sorted. Nodes that have a higher Y position will be drawn later, so they will appear on top of nodes that have a lower Y position.
*/
type YSort struct {
	node2d.Node2D
}

func (o *YSort) baseClass() string {
	return "YSort"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *YSort) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *YSort) getOwner() *C.godot_object {
	return o.owner
}

/*
   Returns true if the children nodes are being sorted.
*/
func (o *YSort) IsSortEnabled() bool {
	log.Println("Calling YSort.IsSortEnabled()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "is_sort_enabled", goArguments, "bool")

	returnValue := goRet.Interface().(bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Set whether the children nodes are sorted or not. (default true)
*/
func (o *YSort) SetSortEnabled(enabled bool) {
	log.Println("Calling YSort.SetSortEnabled()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enabled)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_sort_enabled", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   YSortImplementer is an interface for YSort objects.
*/
type YSortImplementer interface {
	class.Class
}
