//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package canvasitemmaterial

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/material"
)

/*

 */
type CanvasItemMaterial struct {
	material.Material
}

func (o *CanvasItemMaterial) baseClass() string {
	return "CanvasItemMaterial"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *CanvasItemMaterial) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *CanvasItemMaterial) getOwner() *C.godot_object {
	return o.owner
}

/*

 */
func (o *CanvasItemMaterial) GetBlendMode() int64 {
	log.Println("Calling CanvasItemMaterial.GetBlendMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_blend_mode", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *CanvasItemMaterial) GetLightMode() int64 {
	log.Println("Calling CanvasItemMaterial.GetLightMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_light_mode", goArguments, "int64")

	returnValue := goRet.Interface().(int64)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *CanvasItemMaterial) SetBlendMode(blendMode int64) {
	log.Println("Calling CanvasItemMaterial.SetBlendMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(blendMode)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_blend_mode", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*

 */
func (o *CanvasItemMaterial) SetLightMode(lightMode int64) {
	log.Println("Calling CanvasItemMaterial.SetLightMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(lightMode)

	// Call the parent method.

	o.callParentMethod(o.baseClass(), "set_light_mode", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   CanvasItemMaterialImplementer is an interface for CanvasItemMaterial objects.
*/
type CanvasItemMaterialImplementer interface {
	class.Class
}
