//------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "templates/*.go.template" so they can be included in the generated
//   code.
//------------------------------------------------------------------------------

package confirmationdialog

/*
#include <stdio.h>
#include <stdlib.h>
#include <gdnative/gdnative.h>
#include <nativescript/godot_nativescript.h>
*/
import "C"

import (
	"github.com/shadowapex/godot-go/godot/classes/class"
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/godot/classes/acceptdialog"
)

/*
   Dialog for confirmation of actions. This dialog inherits from [AcceptDialog], but has by default an OK and Cancel button (in host OS order).
*/
type ConfirmationDialog struct {
	acceptdialog.AcceptDialog
}

func (o *ConfirmationDialog) baseClass() string {
	return "ConfirmationDialog"
}

// SetOwner will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *ConfirmationDialog) setOwner(object *C.godot_object) {
	o.owner = object
}

func (o *ConfirmationDialog) getOwner() *C.godot_object {
	return o.owner
}

/*
   Return the cancel button.
*/
func (o *ConfirmationDialog) GetCancel() *Button {
	log.Println("Calling ConfirmationDialog.GetCancel()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := class.CallParentMethod(o, o.baseClass(), "get_cancel", goArguments, "*Button")

	returnValue := goRet.Interface().(*Button)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   ConfirmationDialogImplementer is an interface for ConfirmationDialog objects.
*/
type ConfirmationDialogImplementer interface {
	class.Class
}
